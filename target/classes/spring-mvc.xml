<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ 版权所有 2018 ，xieyunbo.com
  -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
    
    <description>Spring MVC Configuration</description>
    
    <!-- 加载配置属性文件 -->
    <context:property-placeholder
        ignore-unresolvable="true" location="classpath:properties/mp_config.properties,classpath:properties/common-config.properties" />
	<!-- 为controller启用cglib代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true" /> 
	<!-- 使用Annotation自动注册Bean,只扫描@Controller 中controller 和conpent 注解-->
	<context:component-scan base-package="com.xyb.trash.controller" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
	</context:component-scan>
    
	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <map> 
                <entry key="xml" value="application/xml"/> 
                <entry key="json" value="application/json"/> 
            </map>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
	</bean>
	
	<!-- 定义视图文件解析 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"/>
        <!-- redirectHttp10Compatible:解决https环境下使用redirect重定向地址变为http的协议，无法访问服务的问题
                   设置为false,即关闭了对http1.0协议的兼容支持  -->
        <property name="redirectHttp10Compatible" value="false" />
		<property name="suffix" value=".jsp"/>
	</bean>
	<!-- 静态资源映射 -->
    <mvc:resources mapping="/css/**" location="/css/" cache-period="31536000"/>
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31536000"/>
    <mvc:resources mapping="/font-awesome/**" location="/font-awesome/" cache-period="31536000"/>
    <mvc:resources mapping="/fonts/**" location="/fonts/" cache-period="31536000"/>
    <mvc:resources mapping="/images/**" location="/images/" cache-period="31536000"/>
	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/admin/toLogin"/>
	
	<!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一位的最后执行。-->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.xyb.trash.interceptor.LogInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop> -->
				<prop key="java.lang.Throwable">/admin/toLogin</prop>
			</props>
			</property>
	</bean>
	<!-- 支持Shiro对Controller的方法级AOP安全控制 end -->
	
</beans>